var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AlgebraicArrays","category":"page"},{"location":"#AlgebraicArrays","page":"Home","title":"AlgebraicArrays","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AlgebraicArrays.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AlgebraicArrays]","category":"page"},{"location":"#AlgebraicArrays.MatrixArray-Union{Tuple{T}, Tuple{AbstractMatrix{T}, Any, Any}} where T<:Number","page":"Home","title":"AlgebraicArrays.MatrixArray","text":"MatrixArray(A,rsize,dsize)\n\nConstruct a MatrixArray from an AbstractArray.\n\nArguments\n\nA::AbstractArray\nrsize: size of range\ndsize: size of domain\n\n\n\n\n\n","category":"method"},{"location":"#AlgebraicArrays.VectorArray-Tuple{AbstractArray, Any}","page":"Home","title":"AlgebraicArrays.VectorArray","text":"VectorArray(A, rsize)\n\nConstruct a VectorArray from an AbstractArray.\n\nArguments\n\nA::AbstractArray\nrsize: size of range\n\n\n\n\n\n","category":"method"},{"location":"#Base.Matrix-Union{Tuple{MatrixArray{T, M, N, R, C} where {M, N, R<:AbstractArray{T, M}, C<:AbstractArray{R, N}}}, Tuple{T}} where T<:Number","page":"Home","title":"Base.Matrix","text":"function Matrix(P::MatrixArray{T}) where T <: Number\n\n\n\n\n\n","category":"method"}]
}
